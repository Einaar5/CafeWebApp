@model WebApp1.Models.HomeContentViewModel
@{
    var content = Model.Contents.FirstOrDefault();
}

<!-- preloader
    ================================================== -->
<div id="preloader">
    <div id="loader" class="dots-fade">
        <div></div>
        <div></div>
        <div></div>
    </div>
</div>

<!-- page wrap
    ================================================== -->
<div id="page" class="s-pagewrap ss-home">

   

    <!-- # intro
    ================================================== -->
    @* <section id="intro" class="container s-intro target-section">
        <div class="grid-block s-intro__content">
            <div class="intro-header">
                <div class="intro-header__overline">@content?.HeaderTitleSm</div>
                <h1 class="intro-header__big-type">
                    @content?.HeaderTitleGr <br>
                </h1>
            </div>

            <figure class="intro-pic-primary">
                <img src="~/images/content/@content?.HeaderImageUrl1"
                     srcset="images/content/@content?.HeaderImageUrl1
                         images/content/@content?.HeaderImageUrl1 2x" alt="">
            </figure>

            <div class="intro-block-content">
                <figure class="intro-block-content__pic">
                    <img src="images/content/@content?.HeaderImageUrl2"
                         srcset="images/content/@content?.HeaderImageUrl2,
                             images/content/@content?.HeaderImageUrl2" alt="">
                </figure>

                <div class="intro-block-content__text-wrap">
                    <p class="intro-block-content__text">
                        @content?.HeaderParagraph
                    </p>

                    <ul class="intro-block-content__social">
                        <li><a href="#0">FB</a></li>
                        <li><a href="#0">IG</a></li>
                        <li><a href="#0">PI</a></li>
                        <li><a href="#0">X</a></li>
                    </ul>
                </div>
            </div>

            <div class="intro-scroll">
                <a class="smoothscroll" href="#menu">
                    <span class="intro-scroll__circle-text"></span>
                    <span class="intro-scroll__text u-screen-reader-text">KaydÄ±r</span>
                    <div class="intro-scroll__icon">
                        <svg clip-rule="evenodd" fill-rule="evenodd" stroke-linejoin="round" stroke-miterlimit="2" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><path d="m5.214 14.522s4.505 4.502 6.259 6.255c.146.147.338.22.53.22s.384-.073.53-.22c1.754-1.752 6.249-6.244 6.249-6.244.144-.144.216-.334.217-.523 0-.193-.074-.386-.221-.534-.293-.293-.766-.294-1.057-.004l-4.968 4.968v-14.692c0-.414-.336-.75-.75-.75s-.75.336-.75.75v14.692l-4.979-4.978c-.289-.289-.761-.287-1.054.006-.148.148-.222.341-.221.534 0 .189.071.377.215.52z" fill-rule="nonzero"/></svg>
                    </div>
                </a>
            </div>
        </div>
    </section> *@

    <!-- # menu
    ================================================== -->
    <section id="menu" class="container s-menu target-section">
        <div class="row s-menu__content">
            <div class="column xl-4 lg-5 md-12 s-menu__content-start">
                <div class="section-header" data-num="01">
                    <h2 class="text-display-title">@(content?.MenuTitle ?? "Our Menu")</h2>
                </div>
                <nav class="tab-nav">
                    <ul class="tab-nav__list">
                        @if (Model.Products != null && Model.Products.Any())
                        {
                            var categories = Model.Products
                            .Where(p => p.Category != null)
                            .Select(p => p.Category)
                            .DistinctBy(c => c.Id)
                            .ToList();
                            for (int i = 0; i < categories.Count; i++)
                            {
                                var category = categories[i];
                                <li>
                                    <a href="#tab-@category.Id" class="tab-link @(i == 0 ? "active" : "")">
                                        <span>@category.Name</span>
                                    </a>
                                </li>
                            }
                        }
                        else
                        {
                            <li><span>No categories available</span></li>
                        }
                    </ul>
                </nav>
            </div>

            <div class="column xl-6 lg-6 md-12 s-menu__content-end">
                <div class="tab-content menu-block">
                    @if (Model.Products != null && Model.Products.Any())
                    {
                        var categories = Model.Products
                        .Where(p => p.Category != null)
                        .Select(p => p.Category)
                        .DistinctBy(c => c.Id)
                        .ToList();
                        for (int i = 0; i < categories.Count; i++)
                        {
                            var category = categories[i];
                            <div id="tab-@category.Id" class="menu-block__group tab-content__item" style="display: @(i == 0 ? "block" : "none");">
                                <h6 class="menu-block__cat-name">@category.Name</h6>
                                <ul class="menu-list">
                                    @foreach (var product in Model.Products
                                                                .Where(p => p.CategoryId == category.Id))
                                    {
                                        <li class="menu-list__item">
                                            <div class="menu-list__item-desc">
                                                <h4>@product.Name</h4>
                                                <p>@product.Description</p>
                                                @if (product.isPopular)
                                                {
                                                    <span class="badge bg-warning text-dark">Popular</span>
                                                }
                                            </div>
                                            <div class="menu-list____item-price">
                                                <span>$</span>@product.Price.ToString("0.00")
                                            </div>
                                        </li>
                                    }
                                </ul>
                            </div>
                        }
                    }
                    else
                    {
                        <p>No products available</p>
                    }
                </div>
            </div>
        </div>
    </section>

   

</div>

<!-- Java Script
================================================== -->
<script src="~/js/plugins.js"></script>
<script src="~/js/main.js"></script>

<script>
    // Tab functionality
    document.addEventListener('DOMContentLoaded', function() {
        const tabLinks = document.querySelectorAll('.tab-link');
        const tabContents = document.querySelectorAll('.tab-content__item');

        tabLinks.forEach(link => {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                
                // Remove active class from all links
                tabLinks.forEach(l => l.classList.remove('active'));
                
                // Add active class to clicked link
                this.classList.add('active');
                
                // Hide all tab contents
                tabContents.forEach(content => {
                    content.style.display = 'none';
                });
                
                // Show the target tab content
                const targetId = this.getAttribute('href');
                const targetContent = document.querySelector(targetId);
                if (targetContent) {
                    targetContent.style.display = 'block';
                }
            });
        });
    });
</script> 